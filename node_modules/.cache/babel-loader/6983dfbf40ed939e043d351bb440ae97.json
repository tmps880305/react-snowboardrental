{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/jenix/Codes/React Projects/react-project-foodorder/src/components/Cart/Checkout.js\";\nimport React from 'react';\nimport classes from './Checkout.module.css';\nimport useInputvalid from '../../hooks/use-inputvalid';\nvar Checkout = function Checkout(props) {\n  var _useInputvalid = useInputvalid(function (value) {\n      return value.trim() !== '';\n    }),\n    enteredName = _useInputvalid.value,\n    nameIsValid = _useInputvalid.isValid,\n    nameHasError = _useInputvalid.hasError,\n    nameChangeHandler = _useInputvalid.inputChangeHandler,\n    nameBlurHandler = _useInputvalid.inputBlurHandler,\n    resetName = _useInputvalid.resetInput;\n  var _useInputvalid2 = useInputvalid(function (value) {\n      return value.trim() !== '';\n    }),\n    enteredStreet = _useInputvalid2.value,\n    streetIsValid = _useInputvalid2.isValid,\n    streetHasError = _useInputvalid2.hasError,\n    streetChangeHandler = _useInputvalid2.inputChangeHandler,\n    streetBlurHandler = _useInputvalid2.inputBlurHandler,\n    resetStreet = _useInputvalid2.resetInput;\n  var _useInputvalid3 = useInputvalid(function (value) {\n      return value.trim() !== '';\n    }),\n    enteredPostal = _useInputvalid3.value,\n    postalIsValid = _useInputvalid3.isValid,\n    postalHasError = _useInputvalid3.hasError,\n    postalChangeHandler = _useInputvalid3.inputChangeHandler,\n    postalBlurHandler = _useInputvalid3.inputBlurHandler,\n    resetPostal = _useInputvalid3.resetInput;\n  var _useInputvalid4 = useInputvalid(function (value) {\n      return value.trim() !== '';\n    }),\n    enteredCity = _useInputvalid4.value,\n    cityIsValid = _useInputvalid4.isValid,\n    cityHasError = _useInputvalid4.hasError,\n    cityChangeHandler = _useInputvalid4.inputChangeHandler,\n    cityBlurHandler = _useInputvalid4.inputBlurHandler,\n    resetCity = _useInputvalid4.resetInput;\n  var formIsValid = false;\n  if (nameIsValid && streetIsValid && postalIsValid && cityIsValid) {\n    formIsValid = true;\n  }\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    console.log(\"Name: \".concat(enteredName, \" , Address: \").concat(enteredStreet, \", \").concat(enteredCity, \", \").concat(enteredPostal));\n    resetName();\n    resetStreet();\n    resetPostal();\n    resetCity();\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: enteredName,\n    onChange: nameChangeHandler,\n    onBlur: nameBlurHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), nameHasError && /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.invalid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 30\n    }\n  }, \"Name must not be empty.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"street\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Street\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"street\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"postal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"postal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"city\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: classes[\"button--alt\"],\n    onClick: props.onCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Confirm\")));\n};\nexport default Checkout;","map":{"version":3,"names":["React","classes","useInputvalid","Checkout","props","value","trim","enteredName","nameIsValid","isValid","nameHasError","hasError","nameChangeHandler","inputChangeHandler","nameBlurHandler","inputBlurHandler","resetName","resetInput","enteredStreet","streetIsValid","streetHasError","streetChangeHandler","streetBlurHandler","resetStreet","enteredPostal","postalIsValid","postalHasError","postalChangeHandler","postalBlurHandler","resetPostal","enteredCity","cityIsValid","cityHasError","cityChangeHandler","cityBlurHandler","resetCity","formIsValid","submitHandler","event","preventDefault","console","log","control","invalid","actions","onCancel","submit"],"sources":["/Users/jenix/Codes/React Projects/react-project-foodorder/src/components/Cart/Checkout.js"],"sourcesContent":["import React from 'react';\n\nimport classes from './Checkout.module.css';\nimport useInputvalid from '../../hooks/use-inputvalid';\n\nconst Checkout = (props) => {\n\n    const {\n        value: enteredName,\n        isValid: nameIsValid,\n        hasError: nameHasError,\n        inputChangeHandler: nameChangeHandler,\n        inputBlurHandler: nameBlurHandler,\n        resetInput: resetName\n    } = useInputvalid((value) => value.trim() !== '');\n\n    const {\n        value: enteredStreet,\n        isValid: streetIsValid,\n        hasError: streetHasError,\n        inputChangeHandler: streetChangeHandler,\n        inputBlurHandler: streetBlurHandler,\n        resetInput: resetStreet\n    } = useInputvalid((value) => value.trim() !== '');\n\n    const {\n        value: enteredPostal,\n        isValid: postalIsValid,\n        hasError: postalHasError,\n        inputChangeHandler: postalChangeHandler,\n        inputBlurHandler: postalBlurHandler,\n        resetInput: resetPostal\n    } = useInputvalid((value) => value.trim() !== '');\n\n    const {\n        value: enteredCity,\n        isValid: cityIsValid,\n        hasError: cityHasError,\n        inputChangeHandler: cityChangeHandler,\n        inputBlurHandler: cityBlurHandler,\n        resetInput: resetCity\n    } = useInputvalid((value) => value.trim() !== '');\n\n    let formIsValid = false;\n\n    if (nameIsValid && streetIsValid && postalIsValid && cityIsValid) {\n        formIsValid = true;\n    }\n\n\n    const submitHandler = event => {\n        event.preventDefault();\n\n        if (!formIsValid) {\n            return;\n        }\n\n        console.log(`Name: ${enteredName} , Address: ${enteredStreet}, ${enteredCity}, ${enteredPostal}`);\n\n        resetName();\n        resetStreet();\n        resetPostal();\n        resetCity();\n\n    };\n\n\n    return <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n            <label htmlFor='name'>Name</label>\n            <input\n                type='text'\n                id='name'\n                value={enteredName}\n                onChange={nameChangeHandler}\n                onBlur={nameBlurHandler}\n            />\n            {nameHasError && <label className={classes.invalid}>Name must not be empty.</label>}\n        </div>\n        <div className={classes.control}>\n            <label htmlFor='street'>Street</label>\n            <input type='text' id='street'/>\n        </div>\n        <div className={classes.control}>\n            <label htmlFor='postal'>Postal Code</label>\n            <input type='text' id='postal'/>\n        </div>\n        <div className={classes.control}>\n            <label htmlFor='city'>City</label>\n            <input type='text' id='city'/>\n        </div>\n        <div className={classes.actions}>\n            <button type='button' className={classes[\"button--alt\"]} onClick={props.onCancel}>Cancel</button>\n            <button className={classes.submit}>Confirm</button>\n        </div>\n    </form>\n\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}